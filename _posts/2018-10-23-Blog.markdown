---
layout:     post
title:      "Github博客搭建记录"
subtitle:   " "
date:       2018-10-23 12:00:00
author:     "NarcissusInMirror"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - 教程
---

趁着还记得，把搭这个博客的过程和中间遇到的一些坑记录一下。

首先把参考的文章摆上来
> https://keysaim.github.io/post/blog/2017-08-15-how-to-setup-your-github-io-blog/


基本上就是按这篇文章所说做的，细节上可能会有一些不同，我认为原文没有说清楚的地方我会在这篇文章里说一下。

### 创建自己的repo
github博客本质上是一个自己账号下的一个仓库，所以我们的第一步是创建这样一个仓库：
![](/img/in-post/post-181023-1.png)
在这里，仓库的名字是有格式要求的，即 `username.github.io` ，其中`username`是你github的用户名。

这样，我们就创建好了一个空白的仓库。

下面呢，我们把创建的这个仓库clone到本地（默认已经配置好SSH了啊，配置SSH的操作就不写了……）

`$ git clone git@github.com:NarcissusInMirror/NarcissusInMirror.github.io.git`

因为是空白的，所以系统会提示你clone下来了一个空的仓库，无视就好了~

然后，原文这里是先让我们添加了一个index.html文件并且push到github上让我们看了看效果，其实就是打印出了一个hello world，这里就先不做这一步了，因为做了这一步之后仓库就不是空白的了，进行之后的操作会涉及到合并冲突的问题，解决是肯定可以解决的，但是就会比较麻烦，只要前面都按着做的话不会有什么问题出现，所以我们直接进行下面的操作。

### 使用模版

前面说了这个博客本质上是一个仓库，要通过我们手动在仓库里添加各种文件才能得到相应的效果，这就要求有一定的前端功底了，我看到这里也是吓了一跳，难道我写个博客还要自己写前端么？？？显然是不用的，网上早就有各种各样的模版可以用了，这篇文章用的就是一个算是有一些人气的模版吧，github上有3400多star。github的链接如下：

> https://github.com/Huxpro/huxpro.github.io

怎么用呢？

这里又和原文有些不同了，作为一个本科专业是通信工程的学生，不得不承认我计算机方面的素养并不很高, 所以平时做事总会有一些野路子==

首先呢，既然我们要用别人的模版（所谓别人的模版，当然就是别人的仓库啦），我们就要在github上fork他的仓库，或者是clone到本地。这里呢，我选择的是clone到本地的方法。

`$ git clone git@github.com:Huxpro/huxpro.github.io.git`

好的，这样这个仓库就到了我们的电脑上了。之后要做的呢，是将自己的空白仓库设置为远程仓库，这里简单以我的理解说一下远程仓库的事情。我们将一个仓库clone到本地，那么这个在git上的仓库就是本地仓库的远程仓库，他的名字是默认的origin，这也就是 `git push origin master`中origin的意思。但是显然，我们在这里clone下来的是大神的仓库，不可能修改以后原路push到人家的仓库里是不是，人家也不会同意的，于是就把自己的空白仓库设置成远程仓库就好了，命令如下（先`cd`到clone下来的仓库里啊）
```
$ git remote add mine https://github.com/NarcissusInMirror/NarcissusInMirror.github.io
```


这里的mine就是给远程仓库起的别名，任何合法的字符串都是可以的，可以随便按你的心意取,使用`$ git remote -v`可以看到当前仓库的远程仓库 如图
![](/img/in-post/post-181023-3.png)

这时其实就可以开始操作了，修改本地仓库的文件，"git三件套"push到远程仓库上
```
$ git add . 
$ git commit -m "comment" 
$ git push mine master
```
没有问题的话就OK了。

#### 一点野路子
但是这里的话呢，本地仓库的名字就会是huxpro.github.io，这对于有点强迫症的我来说有点受不了啊，这时候该怎么办呢？改文件夹的名字吗，不行，感觉一定会碰到未可知的错误，这时菜鸡的我就没辙了。那咋办呢？这里有个野路子，提供给大家哈哈。首先呢，使用clone命令把自己的空白仓库clone下来，这时候本地会出现一个空白的仓库，打开文件夹，是什么都看不到的，但实际上呢，这个文件夹里有一个.git文件夹，是隐藏的，mac用户可以使用`shift+command+.` 显示隐藏文件夹，这个文件夹里存放着配置相关的信息。这时候呢，只要将之前clone下来的模版中的所有文件（注意，不能把那个文件夹里的.git文件也复制过去哦，这个只要是没有开启显示隐藏文件夹的情况下全选赋值就好，否则会报错，告诉你隐藏文件夹不能复制。）复制到你这个仓库里，然后再“git三件套”使上就ok啦。

### 把博客变成你自己的
如果push没有问题的话，再修改一几个文件，就可以显示博客了
 * 一个就是仓库下的_config.yml，最主要的是把url和baseurl修改一下，如图所示
![](/img/in-post/post-181023-2.png)
 * 然后是CNAME文件，这里我也不太懂，但是要把里面的域名删掉，不然会报错。（做完之后也要push上去才行哦）


这两步做完之后，等一小会，在浏览器里输入你的域名：
> https://username.github.io （换成自己的用户名）

就会显示出大神的模版啦，其实就是一模一样的博客。

后续的工作其实就是把博客变成自己的了，主要的一些配置文件都在_config.yml中，博文都放在_post文件夹下，图片都在img文件下，大家自己探索就好。

### 遇到的一个问题及解决办法
刚开始弄的时候一直出现无显示页面的问题，如下图所示
![](/img/in-post/post-181023-5.png)
由于不清楚具体的代码结构，在这一点上卡了好几天，还在原作者的repo下开了个issue问了一下。后来发现，如果出了什么错，github是会给你发邮件的。
![](/img/in-post/post-181023-6.png)
这个错报得我一开始是不太相信的，因为我觉得一个readme怎么会对网页有影响呢…………不过死马当活马医，我还是去试了试，他告诉我tag没有正确结束，我也不太会结束，干脆把这一句删掉了……
![](/img/in-post/post-181023-4.png)
然后竟然真的可以了……所以得出的结论就是，如果有什么问题，一定要注意邮箱啊！




